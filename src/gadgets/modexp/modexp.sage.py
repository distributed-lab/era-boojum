

# This file was *autogenerated* from the file modexp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0x123456789abcdef = Integer(0x123456789abcdef); _sage_const_3564 = Integer(3564); _sage_const_512 = Integer(512)# Modexp helper file.
# Note that we use w = 64 so that n = 4. 

base = _sage_const_0x123456789abcdef 
exponent = _sage_const_0x123456789abcdef 
modulus = _sage_const_3564 

MAX_BITS = _sage_const_512 

def div(base: Integer, modulus: Integer) -> Integer:
    # Extend binary form of base to MAX_BITS
    base = base.binary()
    base = base.zfill(MAX_BITS)
    print(base)

    #print(base.binary())
    #print(modulus.binary())

div(base, modulus)

#assert find_modulus(base, modulus) == base % modulus


